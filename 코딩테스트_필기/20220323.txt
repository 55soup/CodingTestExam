배열의 용어

배열	★연속하여 저장되는 메모리의 구조
배열명	배열의 대표 이름, 첫 시작 주소를 의미하는 주소 상수
요소	배열 속 각각의 데이터
요소번호:	각 요소에 붙여진 번호(인덱스)
배열의 크기: 배열이 차지하는 메모리의 크기(byte 단위)
배열의 길이: 요소의 개수(length)

c언어는 자바와 달리 length 속성,메서드가 xx
length = sizeof(arr) / sizeof(arr[0])


c언어에서 배열의 규칙
1. 정적 배열은 고정 길이다. 길이를 임의로 변경할 수 없다.
2. 배열 요소 번호의 범위를 초과할 수 없다.(0이 최소 번호)
    length = 10   0~9    -1(x)
3. 배열명은 주소를 의미하는 상수로 대입 연산의 왼쪽(lvalue)에 사용할 수 없다.
   arr = 2 (x)
4. c언어에서는 배열의 초기화가 자동으로 이루어지지 않는다. - 쓰레기값.
   선언 + 초기화 


배열선언의 예

int arr[10];
printf("arr배열의 크기: %d bytes \n", sizeof(arr));  //4 * 10 = 40
printf("arr배열 요소의 크기: %d bytes \n", sizeof(arr[0])); //4
printf("arr배열의 길이: %d \n", sizeof(arr) / sizeof(arr[0])); //40 / 4 =10

- 배열명arr은 &arr[0]과 동일한 주소를 의미
- 배열의 공간을 벗어나는 요소를 사용하는 경우 메모리 오류를 발생함.
컴파일러는 이를 감지하지 못하므로 조건식 작성시 유의한다.

배열 요소의 입, 출력
scanf("%d", &arr[3]);  //주소연산자.
printf("%d", arr[3]);


배열의 길이 ≠ 저장된 개수
int arr2[10];
for(int i=0; i<10; i+=){
  if(i<5) arr[i] = i + 1;
}

위의 예제는 배열의 길이는 10개이나 저장된 개수(현재 길이)는 5개를 의미한다.
★쓸 공간만 쓰고 남겨도 ㄱㅊㄱㅊ 감점x


전역변수는 초기화하지 않아도됨!
가급적 전역변수x '지역변수' 써라.
-> 전역변수들이 모든 함수들과 공유하면서 논리오류를 발생시킬 수 있음.


배열의 초기화의 다양한 예
- ★int arr[10] = {1,2,3,4,5,6,7,8,9,10};
- int arr[10] = {1,2,3}  // 3개만 1,2,3 나머지는 쓰레기값.  , ★배열의 길이가 저장된 개수와 꼭 같을 필요없음!!!!
- ★★int arr[10] = {0}    //모든 요소의 값을 0으로 초기화
- int arr[] = {1,2,3,4,5}
- ★for문

int num=10;
int arr[num];  => error! 변수는 길이로 지정 불가.


다차원배열
- 세로 길이와 가로 길이로 정의하는 2차원 배열
- int arr[3][4]  // 3행 4열
- 2차원 배열의 개념 
  세로 길이와 가로 길이로 정의하는 2차원 배열



rank()함수
1~10   rand()%10+1
1~100  rand()%100+1


디버깅 꿀팁~~
확인하는 곳을 제외한 나머지 부분을 코멘트 처리하고 디버깅하기!(f11)